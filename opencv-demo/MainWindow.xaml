<Window x:Class="OpenCVDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:OpenCVDemo.Converters"
        xmlns:components="clr-namespace:OpenCVDemo.Components"
        xmlns:system="clr-namespace:System;assembly=netstandard"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        mc:Ignorable="d"
        Title="Demo OpenCVSharp v4.9.0" Height="550" Width="800">
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibility" />
        <converters:BoolToOpacityConverter x:Key="BoolToOpacity" />
    </Window.Resources>
    <Grid Background="#e5e5e5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="276"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="1" Background="#555">
            <Border BorderBrush="White" BorderThickness="1 0 0 0" HorizontalAlignment="Left" Width="15">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Color="#333" Offset="0.0" />
                        <GradientStop Color="#444" Offset="0.3" />
                        <GradientStop Color="#555" Offset="1.0" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Image Grid.Row="0" x:Name="Transformed" Source="{Binding TransformedImage}" />
                <Image Grid.Row="0" Visibility="{Binding IsOriginalImageRevealed, Converter={StaticResource BoolToVisibility}}" Source="{Binding OriginalImage}" />
                <Image Grid.Row="0" Source="{Binding AnnotatedImage}" />
                <components:HoldButton PressCommand="{Binding RevealOriginalImageCommand}" ReleaseCommand="{Binding HideOriginalImageCommand}" />
                <Canvas x:Name="Canvas" HorizontalAlignment="Center" VerticalAlignment="Center" Width="{Binding ElementName=Transformed, Path=ActualWidth, Mode=OneWay}" Height="{Binding ElementName=Transformed, Path=ActualHeight, Mode=OneWay}">
                    <components:Labeler Command="{Binding SaveLabelCommand}" CanvasWidth="{Binding ElementName=Canvas, Path=ActualWidth, Mode=OneWay}" CanvasHeight="{Binding ElementName=Canvas, Path=ActualHeight, Mode=OneWay}" Canvas.Top="{Binding RelativeSource={RelativeSource Self}, Path=Top}" Canvas.Left="{Binding RelativeSource={RelativeSource Self}, Path=Left}" ImageRect="{Binding SelectedImageLabel}" Visibility="{Binding HasLabeling, Converter={StaticResource BoolToVisibility}}" />
                </Canvas>
                <Slider AutoToolTipPlacement="TopLeft" Minimum="0" Maximum="{Binding MaxImageIndex}" Value="{Binding SelectedImageIndex, Mode=TwoWay}" Grid.Row="1" Margin="10" MaxWidth="200" Visibility="{Binding CanProcess, Converter={StaticResource BoolToVisibility}}"></Slider>
                <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10" Visibility="{Binding CanProcess, Converter={StaticResource BoolToVisibility}}">
                    <Label Padding="0 0 10 0" FontSize="17" VerticalContentAlignment="Center" Foreground="#AAAAAAAA" Content="{Binding SelectedImageName}" />
                    <ToggleButton FontSize="20" ToolTip="Labeling" Padding="5" Background="#99AAAAAA" BorderThickness="0" Content="🏷" IsChecked="{Binding HasLabeling, Mode=TwoWay}" Margin="0 0 7 0">
                        <ToggleButton.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="8" />
                            </Style>
                        </ToggleButton.Resources>
                    </ToggleButton>
                    <ToggleButton FontSize="20" ToolTip="Trova valori ottimali" Padding="5" Background="#99AAAAAA" BorderThickness="0" Content="🧬" IsChecked="{Binding HasFitting, Mode=TwoWay}">
                        <ToggleButton.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="8" />
                            </Style>
                        </ToggleButton.Resources>
                    </ToggleButton>
                </StackPanel>
            </Grid>
        </Grid>

        <DockPanel LastChildFill="True">
            <StackPanel Orientation="Vertical" DockPanel.Dock="Top" Margin="10 10 10 0">
                <DockPanel>
                    <Image Source="Content/opencv-logo.png" Width="100" HorizontalAlignment="Left" />
                    <Label DockPanel.Dock="Right" FontSize="22" ContentStringFormat="{}{0}ms" Content="{Binding Duration}" HorizontalContentAlignment="Right" Visibility="{Binding CanProcess, Converter={StaticResource BoolToVisibility}}"></Label>
                </DockPanel>
                <StackPanel Margin="0 20 0 0">
                    <Label FontWeight="Bold" FontSize="12" Padding="0" Margin="0 0 0 2">DECODE</Label>
                    <Border CornerRadius="5" BorderThickness="1" BorderBrush="#ccc" Background="White">
                        <DockPanel>
                            <Button FontSize="14" DockPanel.Dock="Right" Padding="5 0" Background="Transparent" BorderThickness="0" Command="{Binding BrowseCommand}" Content="Sfoglia...">
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="0 5 5 0" />
                                    </Style>
                                </Button.Resources>
                            </Button>
                            <TextBox FontSize="14" Padding="2" Margin="2 2 0 2" BorderThickness="0 0 1 0" BorderBrush="LightGray" Text="{Binding FolderPath, Mode=TwoWay}"></TextBox>
                        </DockPanel>
                    </Border>
                </StackPanel>
            </StackPanel>
            <ScrollViewer Margin="0 0 0 50" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                <ScrollViewer.Resources>
                    <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">4</system:Double>
                    <Style TargetType="ScrollBar">
                        <Setter Property="Width" Value="4"/>
                    </Style>
                </ScrollViewer.Resources>
                <ItemsControl ItemsSource="{Binding Steps}" Margin="10" dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border CornerRadius="5" BorderThickness="1" BorderBrush="#b4c4d4" Background="#e1ebf6" Padding="8 2 8 2" Margin="0 5 0 5" Opacity="{Binding IsEnabled, Converter={StaticResource BoolToOpacity}, ConverterParameter=0.5}">
                                <StackPanel Orientation="Vertical">
                                    <DockPanel LastChildFill="True">
                                        <CheckBox Margin="0 5 5 0" IsChecked="{Binding IsEnabled, Mode=TwoWay}" VerticalAlignment="Top" />
                                        <Button DockPanel.Dock="Right" Height="22" Width="22" Margin="0 2 -4 0" BorderThickness="0" Background="Transparent" Command="{Binding DeleteCommand}" CommandParameter="{Binding .}" Content="✕" VerticalAlignment="Top">
                                            <Button.Resources>
                                                <Style TargetType="Border">
                                                    <Setter Property="CornerRadius" Value="22" />
                                                </Style>
                                            </Button.Resources>
                                        </Button>
                                        <Label Content="{Binding Name}" Margin="0" Padding="0" VerticalAlignment="Center" FontSize="18" />
                                    </DockPanel>
                                    <ContentControl Margin="0" Padding="0" Content="{Binding Step}" />
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </DockPanel>
        <Grid VerticalAlignment="Bottom" Margin="10">
            <Button VerticalAlignment="Bottom" Background="#0091dc" Foreground="White" BorderBrush="#005c8c" Height="40" Width="40" FontSize="18" Content="➕" HorizontalAlignment="Center" Command="{Binding ToggleAddStepMenuCommand}" Visibility="{Binding CanProcess, Converter={StaticResource BoolToVisibility}}">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="40" />
                    </Style>
                </Button.Resources>
            </Button>
            <Grid Width="256" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0 0 0 32" Visibility="{Binding IsAddStepMenuOpen, Converter={StaticResource BoolToVisibility}}">
                <Border CornerRadius="10" BorderThickness="1" BorderBrush="Gray" Background="White" Margin="0 0 0 9.8">
                    <StackPanel>
                        <DockPanel>
                            <Button DockPanel.Dock="Right" Command="{Binding ToggleAddStepMenuCommand}" Background="Transparent" BorderThickness="0" Width="22" Height="22" Margin="0 4 4 0" Content="✕">
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="22" />
                                    </Style>
                                </Button.Resources>
                            </Button>
                            <Label FontWeight="Bold" FontSize="16">SELEZIONA UNO STEP</Label>
                        </DockPanel>
                        <Border Padding="3">
                        <UniformGrid>
                            <components:StepMenuItem Text="Grayscale" Icon="../Content/icon-grayscale.png" ToolTip="Rende l'immagine in scala di grigi" Command="{Binding AddStepCommand}" CommandParameter="Grayscale" />
                            <components:StepMenuItem Text="Threshold" Icon="../Content/icon-threshold.png" ToolTip="Rende ogni pixel o bianco o nero in base a una soglia" Command="{Binding AddStepCommand}" CommandParameter="Threshold" />
                            <components:StepMenuItem Text="Adaptive Threshold" Icon="../Content/icon-adaptive-threshold.png" ToolTip="Come Threshold ma la soglia è calcolata dinamicamente per-pixel in base ai pixel circostanti" Command="{Binding AddStepCommand}" CommandParameter="AdaptiveThreshold" />
                            <components:StepMenuItem Text="Morph" Icon="../Content/icon-morph.png" ToolTip="Ingrandisce o riduce le aree bianche o nere" Command="{Binding AddStepCommand}" CommandParameter="Morph" />
                            <components:StepMenuItem Text="Contour" Icon="../Content/icon-contour.png" ToolTip="Traccia il contorno di oggetti contrastati rispetto allo sfondo (le linee sono chiuse)" Command="{Binding AddStepCommand}" CommandParameter="Contour" />
                            <components:StepMenuItem Text="Blob Detection" Icon="../Content/icon-blob-detection.png" ToolTip="Come Contour ma permette di filtrare in base a forma e dimensione dell'oggetto rilevato" Command="{Binding AddStepCommand}" CommandParameter="BlobDetection" />
                            <components:StepMenuItem Text="Canny Edge Detection" Icon="../Content/icon-canny-edge.png" ToolTip="Traccia linee lungo le zone di contrasto (le linee possono essere aperte)" Command="{Binding AddStepCommand}" CommandParameter="CannyEdge" />
                        </UniformGrid>
                        </Border>
                    </StackPanel>
                </Border>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom">
                    <Polygon Points="0,0 10,0 5,10" Fill="White" />
                    <Path Data="M10,0 L5,10 L0,0" Stroke="Gray" />
                </Grid>
            </Grid>
        </Grid>
        <components:GeneticProgress
            StartCommand="{Binding StartFittingCommand}"
            CancelCommand="{Binding CancelFittingCommand}"
            CloseCommand="{Binding CloseFittingCommand}"
            Generations="{Binding Generations}"
            CurrentGeneration="{Binding CurrentGeneration}"
            TopFitness="{Binding TopFitness}"
            Fitness="{Binding Fitness}"
            Visibility="{Binding HasFitting, Converter={StaticResource BoolToVisibility}, FallbackValue=Collapsed}"
            Grid.ColumnSpan="2" />
    </Grid>
</Window>
